[{"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/reportWebVitals.js":"1","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/application/CreateApplication.js":"2","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/profile/UserProfile.js":"3","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/chat/reviews.js":"4","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/charts/Graphs.js":"5","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/hospital/HospitalDetail.js":"6","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/StaffPanel.js":"7","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/StaffChat.js":"8","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/hospital/Hospitals.js":"9","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/about/About.js":"10","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/authentication/Logout.js":"11","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/ViewApplication.js":"12","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/index.js":"13","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/authentication/SignUp.js":"14","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/home/Home.js":"15","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/navigation/Navbar.js":"16","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/application/ViewUserApplications.js":"17","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/context/ThemeContext.js":"18"},{"size":362,"mtime":1618518646822,"results":"19","hashOfConfig":"20"},{"size":10554,"mtime":1623424304958,"results":"21","hashOfConfig":"20"},{"size":12859,"mtime":1623424305106,"results":"22","hashOfConfig":"20"},{"size":2303,"mtime":1621075598004,"results":"23","hashOfConfig":"20"},{"size":10762,"mtime":1623237670842,"results":"24","hashOfConfig":"20"},{"size":9753,"mtime":1623240883267,"results":"25","hashOfConfig":"20"},{"size":9948,"mtime":1623149699122,"results":"26","hashOfConfig":"20"},{"size":11520,"mtime":1623424305122,"results":"27","hashOfConfig":"20"},{"size":9895,"mtime":1623425511941,"results":"28","hashOfConfig":"20"},{"size":5579,"mtime":1622802963171,"results":"29","hashOfConfig":"20"},{"size":2120,"mtime":1621164657963,"results":"30","hashOfConfig":"20"},{"size":7077,"mtime":1623424305138,"results":"31","hashOfConfig":"20"},{"size":792,"mtime":1623424305146,"results":"32","hashOfConfig":"20"},{"size":17257,"mtime":1622802963175,"results":"33","hashOfConfig":"20"},{"size":474,"mtime":1623424305034,"results":"34","hashOfConfig":"20"},{"size":13557,"mtime":1623277110117,"results":"35","hashOfConfig":"20"},{"size":6963,"mtime":1623425344364,"results":"36","hashOfConfig":"20"},{"size":447,"mtime":1618518646822,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1framo8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/reportWebVitals.js",[],["80","81"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/application/CreateApplication.js",[],["82","83"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/profile/UserProfile.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/chat/reviews.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/charts/Graphs.js",["84","85"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography, CircularProgress, Container, FormGroup, FormControlLabel, Switch, Card,CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Divider from \"@material-ui/core/Divider\";\n\n\nconst color = ['rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)',\n'rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)',]\n\nconst useStyles = makeStyles(theme=>({\n    card: {\n        overflowX: \"auto\",\n        marginBottom: \"20px\"\n    },\n    typography: {\n        fontFamily: 'Raleway, Arial',\n        fontSize: 32,\n        color : '#039BE5'\n    },\n    loading : {\n        margin: 'auto',\n        width: '50%',\n        textAlign:'center',\n        paddingTop: '15%'\n    },\n    root: {\n        width: '100%',\n        height: '40%',\n    },\n    divider: {\n        margin: `${theme.spacing.unit * 3}px 0`\n    }\n}))\n\nconst Graphs = () => {\n    const dummy = null;\n    const classes = useStyles();\n    const [spinner, setSpinner] = useState(true);\n    const [toggle,setToggle] = useState({\n        switch1: true,\n        switch2: true,\n        switch3: true,\n    });\n    const [location, setLocation] = useState([]);\n    const [Confirmed, setConfirmed] = useState([]);\n    const [deaths, setDeaths] = useState([]);\n    const [discharged, setDischarged] = useState([]);\n    const [totalConfirmed, settotalConfirmed] = useState([]);\n    const [totaldeaths, settotalDeaths] = useState([]);\n    const [totaldischarged, settotalDischarged] = useState([]);\n    const [type, setType] = useState('totalConfirmed');\n\n    const fetchCases = () => {\n        axios({\n            method: 'GET',\n            headers: {\n                'Content-type':'application/json'\n            },\n            url: 'https://api.rootnet.in/covid19-in/stats/latest'\n        })\n            .then(response => {\n                setTimeout(() => setSpinner(false), 1000);\n                const labels = response.data.data.regional;\n                setLocation(labels.map(label => label.loc));\n                setConfirmed(labels.map(label => label.totalConfirmed));\n                setDeaths(labels.map(label => label.deaths));\n                setDischarged(labels.map(label => label.discharged));\n                settotalConfirmed(response.data.data.summary.total);\n                settotalDeaths(response.data.data.summary.deaths)\n                settotalDischarged(response.data.data.summary.discharged)\n                //setTime(response.data.lastRefreshed);\n            })\n            .catch(() => window.alert(\"Please Check you internet connection!\"))\n    }\n\n\n\n    useEffect(() => {\n        fetchCases()\n    },[dummy]);\n\n    const handleSwitch = (event) => {\n        if(event.currentTarget.id === 'switch1') {\n            setToggle({...toggle, switch1: !toggle.switch1})\n        }\n        else if(event.currentTarget.id === 'switch2') {\n            setToggle({...toggle, switch2:!toggle.switch2})\n        }\n        else if(event.currentTarget.id === 'switch3') {\n            setToggle({...toggle, switch3:!toggle.switch3})\n        }\n    }\n\n    const generateChart = (loc, data, label) => {\n        return({\n            data: {\n                labels:loc,\n                datasets:[\n                    {\n                        label: label,\n                        data: data,\n                        backgroundColor: color,\n                        borderColor: color,\n                        borderWidth: 2,\n                        hoverBorderWidth:2,\n                        hoverBorderColor:'#000'\n\n                    }\n                ],\n            },\n            width: 1152,\n            height: 648,\n            tooltips: {\n                enabled: false,\n              },\n            options: {\n                legend:{\n                    display:true,\n                    position:'right'\n                },\n                scales: {\n                    xAxes: [{display: false}]\n                  },\n                maintainAspectRatio: true,\n                responsive: true\n            }\n        });\n    }\n\n    return (\n        <div className=\"charts\">\n            {\n                spinner ?\n                    (\n                        <div className={classes.loading}>\n                            <CircularProgress />\n                            <Typography variant=\"h6\">Loading your data..</Typography>\n                        </div>\n                    ):(\n                        <>\n                            <Grid item xs={12}>\n                                <Card className={classes.card}>\n                                    <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\n                                        {type==='totalConfirmed'?'Total Confirmed Cases':\n                                            type==='totalDeaths'?'Total Deaths':'Total Recovered'}\n                                    </Typography>\n                                    <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\n                                        <TextField\n                                            type='text'\n                                            select\n                                            value={type}\n                                            variant='standard'\n                                            color='primary'\n                                            margin='normal'\n                                            onChange={(event) => setType(event.target.value)}\n                                        >\n                                            <MenuItem value='totalConfirmed'>Total Confirmed Cases</MenuItem>\n                                            <MenuItem value='totalDeaths'>Total Deaths</MenuItem>\n                                            <MenuItem value='totalRecovered'>Total Recovered</MenuItem>\n                                        </TextField>\n                                    </Typography>\n                                    <div style = {{padding: \"10px\"}}>\n                                        {\n                                            toggle.switch1 ?\n                                                <Bar {...generateChart(location, type==='totalConfirmed'?\n                                                    Confirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/> :\n                                                <Doughnut {...generateChart(location, type==='totalConfirmed'?\n                                                    Confirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/>\n                                        }\n                                        <FormGroup row>\n                                            <FormControlLabel\n                                                control={<Switch onChange={handleSwitch} id=\"switch1\" />}\n                                                label=\"Switch Graph Type\"\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Card>\n                                    <CardContent>\n                                        <Typography\n                                            className={\"MuiTypography--heading\"}\n                                            variant={\"h4\"}\n                                            gutterBottom>Total\n                                        </Typography>\n                                        <Typography\n                                            className={classes.typography}\n                                            variant={\"h5\"}\n                                            gutterBottom>{totalConfirmed}\n                                        </Typography>\n                                        <Divider className={classes.divider} light />\n                                        <Typography\n                                            className={\"MuiTypography--subheading\"}\n                                            variant={\"h4\"}>Discharged\n                                        </Typography>\n                                        <Typography\n                                            className={classes.typography}\n                                            variant={\"h5\"}\n                                            gutterBottom>{totaldischarged}\n                                        </Typography>\n                                        <Divider className={classes.divider} light />\n                                        <Typography\n                                            className={\"MuiTypography--subheading\"}\n                                            variant={\"h4\"}>Deaths\n                                        </Typography>\n                                        <Typography\n                                            className={classes.typography}\n                                            variant={\"h5\"}\n                                            gutterBottom>{totaldeaths}\n                                        </Typography>\n                                        <Divider className={classes.divider} light />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </>\n                    )\n            }\n        </div>\n    );\n}\n\nexport default Graphs;",["86","87"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/hospital/HospitalDetail.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/StaffPanel.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/StaffChat.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/hospital/Hospitals.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/about/About.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/authentication/Logout.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/ViewApplication.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/index.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/authentication/SignUp.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/home/Home.js",["88"],"import React from \"react\";\nimport {Typography} from \"@material-ui/core\";\nimport {getToken} from \"../authentication/cookies\";\nimport jwtDecode from \"jwt-decode\";\nimport Hospitals from \"../hospital/Hospitals\";\nimport StaffPanel from \"../staff/StaffPanel\";\n\nconst Home = () => {\n    let token = getToken();\n    const is_staff = getToken() ==='' ? false : jwtDecode(token).is_staff;\n\n    if(is_staff)\n        return <StaffPanel/>\n\n    return <Hospitals/>\n}\n\nexport default Home;",["89","90"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/navigation/Navbar.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/application/ViewUserApplications.js",["91","92"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/context/ThemeContext.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":40,"nodeType":"101","messageId":"102","endLine":3,"endColumn":49},{"ruleId":"99","severity":1,"message":"103","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":12},{"ruleId":"93","replacedBy":"104"},{"ruleId":"95","replacedBy":"105"},{"ruleId":"99","severity":1,"message":"106","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":19},{"ruleId":"93","replacedBy":"107"},{"ruleId":"95","replacedBy":"108"},{"ruleId":"99","severity":1,"message":"109","line":49,"column":12,"nodeType":"101","messageId":"102","endLine":49,"endColumn":16},{"ruleId":"99","severity":1,"message":"110","line":49,"column":18,"nodeType":"101","messageId":"102","endLine":49,"endColumn":25},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Fade' is defined but never used.",["111"],["112"],"'Typography' is defined but never used.",["111"],["112"],"'view' is assigned a value but never used.","'setView' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]