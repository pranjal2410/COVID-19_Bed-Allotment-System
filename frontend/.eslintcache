[{"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js":"2","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\hospital\\Hospitals.js":"3","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js":"4","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js":"5","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\News.js":"6","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js":"7","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Logout.js":"8","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\sentiments\\Sentiment.js":"9","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js":"10","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js":"11","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\reviews.js":"12","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\Chat.js":"13","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js":"14","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js":"15","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js":"16","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js":"17","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js":"18","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\ChatScreen.js":"19"},{"size":375,"mtime":1619934055275,"results":"20","hashOfConfig":"21"},{"size":11923,"mtime":1619934055250,"results":"22","hashOfConfig":"21"},{"size":8055,"mtime":1620384203658,"results":"23","hashOfConfig":"21"},{"size":760,"mtime":1620365539155,"results":"24","hashOfConfig":"21"},{"size":1112,"mtime":1619934055235,"results":"25","hashOfConfig":"21"},{"size":3256,"mtime":1620365014996,"results":"26","hashOfConfig":"21"},{"size":13437,"mtime":1619946631344,"results":"27","hashOfConfig":"21"},{"size":2172,"mtime":1619934055243,"results":"28","hashOfConfig":"21"},{"size":1120,"mtime":1619934055267,"results":"29","hashOfConfig":"21"},{"size":828,"mtime":1619934055248,"results":"30","hashOfConfig":"21"},{"size":14441,"mtime":1619946184747,"results":"31","hashOfConfig":"21"},{"size":2378,"mtime":1620413639014,"results":"32","hashOfConfig":"21"},{"size":5540,"mtime":1620416592149,"results":"33","hashOfConfig":"21"},{"size":816,"mtime":1620366572155,"results":"34","hashOfConfig":"21"},{"size":465,"mtime":1619934055269,"results":"35","hashOfConfig":"21"},{"size":10815,"mtime":1620404766181,"results":"36","hashOfConfig":"21"},{"size":7184,"mtime":1619946631334,"results":"37","hashOfConfig":"21"},{"size":5729,"mtime":1619946631340,"results":"38","hashOfConfig":"21"},{"size":3178,"mtime":1620416908735,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1uzpb5p",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js",[],["83","84"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js",["85"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Typography, CircularProgress, Container, FormGroup, FormControlLabel, Switch, Card,CardContent } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport News from \"../home/News\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nconst color = ['rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\r\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\r\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)',\r\n'rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)',]\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    card: {\r\n        overflowX: \"auto\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    typography: {\r\n        fontFamily: 'Raleway, Arial',\r\n        fontSize: 32,\r\n        color : '#039BE5'\r\n    },\r\n    loading : {\r\n        margin: 'auto',\r\n        width: '50%',\r\n        textAlign:'center',\r\n        paddingTop: '15%'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        height: '40%',\r\n    },\r\n    divider: {\r\n        margin: `${theme.spacing.unit * 3}px 0`\r\n    }\r\n}))\r\n\r\nconst Graphs = () => {\r\n    const dummy = null;\r\n    const classes = useStyles();\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [toggle,setToggle] = useState({\r\n        switch1: true,\r\n        switch2: true,\r\n        switch3: true,\r\n    });\r\n    const [location, setLocation] = useState([]);\r\n    const [Confirmed, setConfirmed] = useState([]);\r\n    const [deaths, setDeaths] = useState([]);\r\n    const [discharged, setDischarged] = useState([]);\r\n    const [totalConfirmed, settotalConfirmed] = useState([]);\r\n    const [totaldeaths, settotalDeaths] = useState([]);\r\n    const [totaldischarged, settotalDischarged] = useState([]);\r\n    const [time, setTime] = useState({});\r\n    const [type, setType] = useState('totalConfirmed');\r\n    const [news,setNews] = useState([]);\r\n\r\n    const fetchCases = () => {\r\n        axios({\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            url: 'https://api.rootnet.in/covid19-in/stats/latest'\r\n        })\r\n            .then(response => {\r\n                setTimeout(() => setSpinner(false), 1000);\r\n                const labels = response.data.data.regional;\r\n                setLocation(labels.map(label => label.loc));\r\n                setConfirmed(labels.map(label => label.totalConfirmed));\r\n                setDeaths(labels.map(label => label.deaths));\r\n                setDischarged(labels.map(label => label.discharged));\r\n                settotalConfirmed(response.data.data.summary.total);\r\n                settotalDeaths(response.data.data.summary.deaths)\r\n                settotalDischarged(response.data.data.summary.discharged)\r\n                setTime(response.data.lastRefreshed);\r\n            })\r\n            .catch(() => window.alert(\"Please Check you internet connection!\"))\r\n    }\r\n\r\n    const fetchNews = () => {\r\n        axios({\r\n            method:'get',\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            url: 'https://newsapi.org/v2/everything?q=covid&apiKey=13cb9c6ff1be40f8bb5ee37eef23c446'\r\n            })\r\n            .then(data => {\r\n                setTimeout(() => setSpinner(false), 1000);\r\n                setNews(data.data.articles);\r\n            })\r\n            .catch((e) => window.alert(e.message))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCases()\r\n        fetchNews()\r\n    },[dummy]);\r\n\r\n    const handleSwitch = (event) => {\r\n        if(event.currentTarget.id === 'switch1') {\r\n            setToggle({...toggle, switch1: !toggle.switch1})\r\n        }\r\n        else if(event.currentTarget.id === 'switch2') {\r\n            setToggle({...toggle, switch2:!toggle.switch2})\r\n        }\r\n        else if(event.currentTarget.id === 'switch3') {\r\n            setToggle({...toggle, switch3:!toggle.switch3})\r\n        }\r\n    }\r\n\r\n    const generateChart = (loc, data, label) => {\r\n        return({\r\n            data: {\r\n                labels:loc,\r\n                datasets:[\r\n                    {\r\n                        label: label,\r\n                        data: data,\r\n                        backgroundColor: color,\r\n                        borderColor: color,\r\n                        borderWidth: 2,\r\n                        hoverBorderWidth:2,\r\n                        hoverBorderColor:'#000'\r\n\r\n                    }\r\n                ],\r\n            },\r\n            width: 1152,\r\n            height: 648,\r\n            tooltips: {\r\n                enabled: false,\r\n              },\r\n            options: {\r\n                legend:{\r\n                    display:true,\r\n                    position:'right'\r\n                },\r\n                scales: {\r\n                    xAxes: [{display: false}]\r\n                  },\r\n                maintainAspectRatio: true,\r\n                responsive: true\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"charts\">\r\n            {\r\n                spinner ?\r\n                    (\r\n                        <div className={classes.loading}>\r\n                            <CircularProgress />\r\n                            <Typography variant=\"h6\">Loading your data..</Typography>\r\n                        </div>\r\n                    ):(\r\n                        <Container>\r\n                             <Grid container className={classes.root} spacing={3}>\r\n                             <Grid item xs={8} className={classes.root}>\r\n                            <Card className={classes.card}>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\r\n                                    {type==='totalConfirmed'?'Total Confirmed Cases':\r\n                                    type==='totalDeaths'?'Total Deaths':'Total Recovered'}\r\n                                </Typography>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\r\n                                    <TextField\r\n                                        type='text'\r\n                                        select\r\n                                        value={type}\r\n                                        variant='standard'\r\n                                        color='primary'\r\n                                        margin='normal'\r\n                                        onChange={(event) => setType(event.target.value)}\r\n                                    >\r\n                                        <MenuItem value='totalConfirmed'>Total Confirmed Cases</MenuItem>\r\n                                        <MenuItem value='totalDeaths'>Total Deaths</MenuItem>\r\n                                        <MenuItem value='totalRecovered'>Total Recovered</MenuItem>\r\n                                    </TextField>\r\n                                </Typography>\r\n                                <div style = {{padding: \"10px\"}}>\r\n                                    {\r\n                                    toggle.switch1 ?\r\n                                        <Bar {...generateChart(location, type==='totalConfirmed'?\r\n                                            Confirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/> :\r\n                                        <Doughnut {...generateChart(location, type==='totalConfirmed'?\r\n                                            Confirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/>\r\n                                    }\r\n                                    <FormGroup row>\r\n                                        <FormControlLabel\r\n                                            control={<Switch onChange={handleSwitch} id=\"switch1\" />}\r\n                                            label=\"Switch Graph Type\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </Card>\r\n                             </Grid>\r\n                             <Fade in={true} timeout={1000}>\r\n                                <Grid item xs={4}>\r\n                                    <Card>\r\n                                    <CardContent>\r\n                                        <Typography\r\n                                            className={\"MuiTypography--heading\"}\r\n                                            variant={\"h4\"}\r\n                                            gutterBottom>Total\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            className={classes.typography}\r\n                                            variant={\"h5\"}\r\n                                            gutterBottom>{totalConfirmed}\r\n                                        </Typography>\r\n                                        <Divider className={classes.divider} light />\r\n                                        <Typography\r\n                                            className={\"MuiTypography--subheading\"}\r\n                                            variant={\"h4\"}>Discharged\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            className={classes.typography}\r\n                                            variant={\"h5\"}\r\n                                            gutterBottom>{totaldischarged}\r\n                                        </Typography>\r\n                                        <Divider className={classes.divider} light />\r\n                                        <Typography\r\n                                            className={\"MuiTypography--subheading\"}\r\n                                            variant={\"h4\"}>Deaths\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            className={classes.typography}\r\n                                            variant={\"h5\"}\r\n                                            gutterBottom>{totaldeaths}\r\n                                        </Typography>\r\n                                        <Divider className={classes.divider} light />\r\n                                    </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                             </Fade>\r\n                             <Fade in={true} timeout={1000}>\r\n                                <Grid item xs={12}><News news = {news}/></Grid>\r\n                             </Fade>\r\n                             </Grid> \r\n                        </Container>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Graphs;","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\hospital\\Hospitals.js",["86","87","88","89"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js",["90"],"import React from \"react\";\r\nimport {ThemeProvider, createMuiTheme, colors, CssBaseline} from \"@material-ui/core\";\r\nimport Navbar from \"./components/navigation/Navbar\";\r\nimport {blue, red} from \"@material-ui/core/colors\";\r\nimport {ThemeContext} from \"./context/ThemeContext\";\r\n\r\nconst App = () => {\r\n  const {dark} = React.useContext(ThemeContext);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: dark ? 'dark' : 'light',\r\n      primary: {\r\n        main: dark?blue[300]:blue[800],\r\n      },\r\n      secondary: {\r\n        main: dark?red[300]:red[800],\r\n      },\r\n    },\r\n  })\r\n\r\n  return (\r\n     <>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline/>\r\n        <Navbar/>\r\n      </ThemeProvider>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n",["91","92"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\News.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js",[],["93","94"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Logout.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\sentiments\\Sentiment.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\reviews.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\Chat.js",["95","96","97","98","99","100","101"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\ChatScreen.js",["102","103","104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":66,"column":12,"nodeType":"112","messageId":"113","endLine":66,"endColumn":16},{"ruleId":"110","severity":1,"message":"114","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"115","line":15,"column":37,"nodeType":"112","messageId":"113","endLine":15,"endColumn":50},{"ruleId":"116","severity":1,"message":"117","line":152,"column":7,"nodeType":"118","endLine":152,"endColumn":9,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":158,"column":17,"nodeType":"122","endLine":163,"endColumn":128},{"ruleId":"110","severity":1,"message":"123","line":2,"column":40,"nodeType":"112","messageId":"113","endLine":2,"endColumn":46},{"ruleId":"106","replacedBy":"124"},{"ruleId":"108","replacedBy":"125"},{"ruleId":"106","replacedBy":"126"},{"ruleId":"108","replacedBy":"127"},{"ruleId":"110","severity":1,"message":"128","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":11},{"ruleId":"110","severity":1,"message":"129","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":17},{"ruleId":"110","severity":1,"message":"130","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":12},{"ruleId":"110","severity":1,"message":"131","line":67,"column":12,"nodeType":"112","messageId":"113","endLine":67,"endColumn":17},{"ruleId":"110","severity":1,"message":"132","line":67,"column":19,"nodeType":"112","messageId":"113","endLine":67,"endColumn":27},{"ruleId":"110","severity":1,"message":"133","line":68,"column":12,"nodeType":"112","messageId":"113","endLine":68,"endColumn":20},{"ruleId":"110","severity":1,"message":"134","line":68,"column":21,"nodeType":"112","messageId":"113","endLine":68,"endColumn":32},{"ruleId":"110","severity":1,"message":"135","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"110","severity":1,"message":"136","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":14},{"ruleId":"110","severity":1,"message":"137","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":11},{"ruleId":"110","severity":1,"message":"138","line":35,"column":11,"nodeType":"112","messageId":"113","endLine":35,"endColumn":25},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'time' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'CartesianGrid' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tileData'. Either include it or remove the dependency array.","ArrayExpression",["141"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'colors' is defined but never used.",["139"],["140"],["139"],["140"],"'Box' is defined but never used.","'TextField' is defined but never used.","'List' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'Avatar' is defined but never used.","'Fab' is defined but never used.","'RenderMessages' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [tileData]",{"range":"144","text":"145"},[5569,5571],"[tileData]"]