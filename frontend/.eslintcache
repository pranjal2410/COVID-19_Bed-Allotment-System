[{"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js":"3","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js":"4","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\staff\\StaffChat.js":"5","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\reviews.js":"6","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\staff\\ViewApplication.js":"7","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js":"8","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js":"9","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\application\\CreateApplication.js":"10","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js":"11","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js":"12","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js":"13"},{"size":816,"mtime":1620366572155,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1619934055275,"results":"16","hashOfConfig":"15"},{"size":5751,"mtime":1620554355511,"results":"17","hashOfConfig":"15"},{"size":11112,"mtime":1620642227918,"results":"18","hashOfConfig":"15"},{"size":11769,"mtime":1621322365957,"results":"19","hashOfConfig":"15"},{"size":2382,"mtime":1621080105141,"results":"20","hashOfConfig":"15"},{"size":7218,"mtime":1622737357214,"results":"21","hashOfConfig":"15"},{"size":774,"mtime":1620973564696,"results":"22","hashOfConfig":"15"},{"size":5700,"mtime":1622741834348,"results":"23","hashOfConfig":"15"},{"size":11135,"mtime":1622734721200,"results":"24","hashOfConfig":"15"},{"size":13164,"mtime":1622734417645,"results":"25","hashOfConfig":"15"},{"size":12665,"mtime":1622734829473,"results":"26","hashOfConfig":"15"},{"size":17627,"mtime":1622739277536,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fgf3se",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js",[],["56","57"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\staff\\StaffChat.js",["58"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\reviews.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\staff\\ViewApplication.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\application\\CreateApplication.js",["59","60","61","62","63"],"import React from \"react\";\r\nimport {Box, Typography,Checkbox,Paper,Grid, FormControl, Select, InputLabel,makeStyles,IconButton} from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {getToken} from \"../authentication/cookies\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\nimport { Document, Page, pdfjs  } from 'react-pdf';\r\nimport { useHistory } from \"react-router\";\r\nimport jwtDecode from \"jwt-decode\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    map : {\r\n        padding : 10\r\n    },\r\n    large: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    }\r\n}))\r\n\r\nconst CreateApplication = () => {\r\n    const token = getToken();\r\n    const history = useHistory();\r\n    const hospital = history.location.state.hospital;\r\n    const [vaccine_info,setVaccineinfo] = React.useState(\"\");\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const [url,setUrl] = React.useState(null);\r\n    const classes = useStyles();\r\n    const [switchData,setswitchData] = React.useState({\r\n        is_diabetic: false,\r\n        is_corona_positive : false,\r\n        is_heart_patient : false,\r\n        on_medications: false\r\n    });\r\n    const [numPages, setNumPages] = React.useState(null);\r\n    const [documents,setDocuments] = React.useState([]);\r\n    const [pageNumber, setPageNumber] = React.useState(1);\r\n    const onDocumentLoadSuccess = ({ numPages })=> setNumPages(numPages);\r\n\r\n\r\n    const UploadButtons = ()=> {\r\n        return (\r\n            <React.Fragment>\r\n                <input\r\n                    className={classes.input}\r\n                    onChange={handlefileUpload}\r\n                    type=\"file\"\r\n                />\r\n                <input className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handlefileUpload}/>\r\n                <label htmlFor=\"icon-button-file\">\r\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                        <CloudUpload fontSize='large'/>\r\n                    </IconButton>\r\n                </label>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const base64toBlob = (data) => {\r\n        // Cut the prefix `data:application/pdf;base64` from the raw base 64\r\n        let base64WithoutPrefix = data.substr('data:application/pdf;base64,'.length);\r\n        let bytes = atob(base64WithoutPrefix);\r\n        let length = bytes.length;\r\n        let out = new Uint8Array(length);\r\n        while (length--) {\r\n            out[length] = bytes.charCodeAt(length);\r\n        }\r\n        return new Blob([out], { type: 'application/pdf' });\r\n    };\r\n\r\n    const handlefileUpload = (event)=>{\r\n        handleDisplayFile(event.target.files[0]);\r\n        setDocuments([...documents,event.target.files[0]]);\r\n    }\r\n\r\n    const handleDisplayFile = (file)=>{\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = function () {\r\n            let blob = base64toBlob(reader.result);\r\n            let url = URL.createObjectURL(blob);\r\n            setUrl(url)\r\n        }.bind(this);\r\n    }\r\n    const handlefileDelete=(name)=>{\r\n        setDocuments(documents.filter(document=>document.name!==name));\r\n        setUrl(null);\r\n    }\r\n    const handleSwitchChange = (event) =>setswitchData({ ...switchData, [event.target.name]: event.target.checked });\r\n\r\n\r\n    const handleSubmit = () => {\r\n        let data = new FormData();\r\n        let dataObj = {\r\n            ...switchData,\r\n            user_id: jwtDecode(token).id,\r\n            hospital_slug: hospital.slug\r\n        }\r\n        Object.keys(dataObj).map((key, i) => {\r\n            data.append(key, dataObj[key]);\r\n        });\r\n        documents.forEach((document,index)=>data.append(`documents[${index}]`,document));\r\n\r\n        enqueueSnackbar('Sending data....', {variant: \"info\", key: 'try_signUp'})\r\n        axios({\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                Authorization: `Token ${token}`\r\n            },\r\n            data: data,\r\n            url: `${process.env.REACT_APP_API_URL}/portal/patients/`\r\n        }).then(response => {\r\n            closeSnackbar('try_signUp')\r\n            enqueueSnackbar('Application Successfull!', { variant: 'success', key: 'signUp_success'})\r\n            setTimeout(() => closeSnackbar('signUp_success'), 5000);\r\n            enqueueSnackbar('Sending OTP...', {variant: 'info', key: 'send-otp'})\r\n        }).catch(error => {\r\n            closeSnackbar('try_signUp')\r\n            enqueueSnackbar('Failed to Register Application', { variant: 'error', key: 'signUp_error'})\r\n            setTimeout(() => closeSnackbar('signUp_error'), 5000)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} justify='center'>\r\n            <Grid item xs={12} md={6}>\r\n                <Paper elevation={3} style={{padding:10,width:'100%',textAlign:'center'}}>\r\n                    <Typography variant='h4'>Create an Application for Bed</Typography>\r\n                    <Paper elevation={2} style={{padding:10}}>\r\n                        <Typography variant='h5' color='textSecondary'>{hospital.name}</Typography>\r\n                    </Paper>\r\n                    <FormGroup style={{padding:10}}>\r\n                        <FormControlLabel\r\n                            key={'one'}\r\n                            control={\r\n                                <Checkbox checked={switchData.is_corona_positive}\r\n                                          onChange={handleSwitchChange}\r\n                                          name=\"is_corona_positive\" />\r\n                            }\r\n                            label=\"Are you COVID Positive ?\"\r\n                        />\r\n                        <FormControlLabel\r\n                            key={'two'}\r\n                            control={<Checkbox checked={switchData.is_diabetic}\r\n                                               onChange={handleSwitchChange}\r\n                                               name=\"is_diabetic\" />\r\n                            }\r\n                            label=\"Are you diabetic?\"\r\n                        />\r\n                        <FormControlLabel\r\n                            key={'three'}\r\n                            control={\r\n                                <Checkbox checked={switchData.is_heart_patient}\r\n                                          onChange={handleSwitchChange}\r\n                                          name=\"is_heart_patient\" />\r\n                            }\r\n                            label=\"Do you have heart complications ?\"\r\n                        />\r\n                        <FormControlLabel\r\n                            key={'four'}\r\n                            control={\r\n                                <Checkbox checked={switchData.on_medications}\r\n                                          onChange={handleSwitchChange}\r\n                                          name=\"on_medications\" />\r\n                            }\r\n                            label=\"Are you on some medication ?\"\r\n                        />\r\n                    </FormGroup>\r\n                    <Typography variant='caption'>Number of vaccine doses taken</Typography>\r\n                    <FormControl style={{width:'100%'}}>\r\n                        <Select\r\n                            labelId=\"vaccine\"\r\n                            variant='outlined'\r\n                            placeholder='Number of Vaccines Doses Taken'\r\n                            value={vaccine_info}\r\n                            onChange={(e)=>setVaccineinfo(e.target.value)}>\r\n                            <MenuItem value={'No Doses Taken'}>No Doses Taken</MenuItem>\r\n                            <MenuItem value={'First Dose Over'}>First Dose Over</MenuItem>\r\n                            <MenuItem value={'All Doses Over'}>All Doses Over</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <div style={{\r\n                        display:'flex',\r\n                        justifyContent : 'space-between',\r\n                        alignItems : 'center',\r\n                        width : '100%'\r\n                    }}>\r\n                        <Typography variant='h6'>\r\n                            Add Required Documents\r\n                        </Typography>\r\n                        {UploadButtons()}\r\n                    </div>\r\n                    <Box style={{margin:10}}>\r\n                        {documents.map(document=>(\r\n                            <Paper elevation={3} onClick={handleDisplayFile.bind(this,document)}\r\n                                   style={{margin:10,\r\n                                       padding:10,\r\n                                       display:'flex',\r\n                                       justifyContent:'space-between'}}>\r\n                                <Typography variant='caption'>{document.name}</Typography>\r\n                                <Button variant='contained' color='secondary'\r\n                                        onClick={handlefileDelete.bind(this,document.name)}>Remove</Button>\r\n                            </Paper>\r\n                        ))}\r\n                    </Box>\r\n                    <Box style={{margin:10,display:'flex',justifyContent:'space-between'}}>\r\n                        <Button color='secondary' variant='contained' onClick={()=>{\r\n                            setDocuments([]);\r\n                            setVaccineinfo(\"\");\r\n                            setswitchData({\r\n                                is_diabetic: false,\r\n                                is_corona_positive : false,\r\n                                is_heart_patient : false,\r\n                                on_medications: false\r\n                            });\r\n                            setUrl(null);\r\n                        }}>\r\n                            Reset\r\n                        </Button>\r\n                        <Button color=\"primary\" variant='contained' onClick={handleSubmit}>\r\n                            Proceed\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item container xs={12} md={6} justify='center' alignItems='center'>\r\n                <Paper elevation={3} style={{overflow:'hidden'}}>\r\n                    <Document\r\n                        file={url}\r\n                        onLoadSuccess={onDocumentLoadSuccess}\r\n                    >\r\n                        <Page pageNumber={pageNumber} />\r\n                    </Document>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CreateApplication;","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":72,"column":8,"nodeType":"70","endLine":72,"endColumn":10,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":67,"nodeType":"74","messageId":"75","endLine":2,"endColumn":77},{"ruleId":"72","severity":1,"message":"76","line":43,"column":12,"nodeType":"74","messageId":"75","endLine":43,"endColumn":20},{"ruleId":"72","severity":1,"message":"77","line":45,"column":24,"nodeType":"74","messageId":"75","endLine":45,"endColumn":37},{"ruleId":"78","severity":1,"message":"79","line":92,"column":11,"nodeType":"80","messageId":"81","endLine":92,"endColumn":15,"fix":"82"},{"ruleId":"83","severity":1,"message":"84","line":108,"column":43,"nodeType":"85","messageId":"86","endLine":108,"endColumn":45},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'closeAlert', 'connecttoSocket', 'currentChatUser', 'showAlert', 'socket', and 'token'. Either include them or remove the dependency array. You can also do a functional update 'setcurrentChatUser(c => ...)' if you only need 'currentChatUser' in the 'setcurrentChatUser' call.","ArrayExpression",["89"],"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar","'numPages' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"90","text":"91"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},[3487,3498],"","Update the dependencies array to be: [closeAlert, connecttoSocket, currentChatUser, showAlert, socket, token]",{"range":"94","text":"95"},[2890,2892],"[closeAlert, connecttoSocket, currentChatUser, showAlert, socket, token]"]