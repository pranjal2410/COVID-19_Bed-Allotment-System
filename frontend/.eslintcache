[{"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/reportWebVitals.js":"1","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/application/CreateApplication.js":"2","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/profile/UserProfile.js":"3","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/chat/reviews.js":"4","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/charts/Graphs.js":"5","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/hospital/HospitalDetail.js":"6","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/StaffPanel.js":"7","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/StaffChat.js":"8","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/hospital/Hospitals.js":"9","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/about/About.js":"10","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/authentication/Logout.js":"11","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/ViewApplication.js":"12","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/index.js":"13","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/authentication/SignUp.js":"14","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/home/Home.js":"15","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/navigation/Navbar.js":"16","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/application/ViewUserApplications.js":"17"},{"size":362,"mtime":1618518646822,"results":"18","hashOfConfig":"19"},{"size":10554,"mtime":1623257973577,"results":"20","hashOfConfig":"19"},{"size":12859,"mtime":1622655440782,"results":"21","hashOfConfig":"19"},{"size":2303,"mtime":1621075598004,"results":"22","hashOfConfig":"19"},{"size":10762,"mtime":1623237670842,"results":"23","hashOfConfig":"19"},{"size":9753,"mtime":1623240883267,"results":"24","hashOfConfig":"19"},{"size":9948,"mtime":1623149699122,"results":"25","hashOfConfig":"19"},{"size":11520,"mtime":1623259461143,"results":"26","hashOfConfig":"19"},{"size":12415,"mtime":1623277619267,"results":"27","hashOfConfig":"19"},{"size":5579,"mtime":1622802963171,"results":"28","hashOfConfig":"19"},{"size":2120,"mtime":1621164657963,"results":"29","hashOfConfig":"19"},{"size":7077,"mtime":1623264130728,"results":"30","hashOfConfig":"19"},{"size":792,"mtime":1620582616543,"results":"31","hashOfConfig":"19"},{"size":17257,"mtime":1622802963175,"results":"32","hashOfConfig":"19"},{"size":474,"mtime":1623233846562,"results":"33","hashOfConfig":"19"},{"size":13557,"mtime":1623277110117,"results":"34","hashOfConfig":"19"},{"size":6971,"mtime":1623278530448,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1framo8",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/reportWebVitals.js",[],["77","78"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/application/CreateApplication.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/profile/UserProfile.js",[],["79","80"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/chat/reviews.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/charts/Graphs.js",["81","82"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography, CircularProgress, Container, FormGroup, FormControlLabel, Switch, Card,CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Divider from \"@material-ui/core/Divider\";\n\n\nconst color = ['rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)',\n'rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)',]\n\nconst useStyles = makeStyles(theme=>({\n    card: {\n        overflowX: \"auto\",\n        marginBottom: \"20px\"\n    },\n    typography: {\n        fontFamily: 'Raleway, Arial',\n        fontSize: 32,\n        color : '#039BE5'\n    },\n    loading : {\n        margin: 'auto',\n        width: '50%',\n        textAlign:'center',\n        paddingTop: '15%'\n    },\n    root: {\n        width: '100%',\n        height: '40%',\n    },\n    divider: {\n        margin: `${theme.spacing.unit * 3}px 0`\n    }\n}))\n\nconst Graphs = () => {\n    const dummy = null;\n    const classes = useStyles();\n    const [spinner, setSpinner] = useState(true);\n    const [toggle,setToggle] = useState({\n        switch1: true,\n        switch2: true,\n        switch3: true,\n    });\n    const [location, setLocation] = useState([]);\n    const [Confirmed, setConfirmed] = useState([]);\n    const [deaths, setDeaths] = useState([]);\n    const [discharged, setDischarged] = useState([]);\n    const [totalConfirmed, settotalConfirmed] = useState([]);\n    const [totaldeaths, settotalDeaths] = useState([]);\n    const [totaldischarged, settotalDischarged] = useState([]);\n    const [type, setType] = useState('totalConfirmed');\n\n    const fetchCases = () => {\n        axios({\n            method: 'GET',\n            headers: {\n                'Content-type':'application/json'\n            },\n            url: 'https://api.rootnet.in/covid19-in/stats/latest'\n        })\n            .then(response => {\n                setTimeout(() => setSpinner(false), 1000);\n                const labels = response.data.data.regional;\n                setLocation(labels.map(label => label.loc));\n                setConfirmed(labels.map(label => label.totalConfirmed));\n                setDeaths(labels.map(label => label.deaths));\n                setDischarged(labels.map(label => label.discharged));\n                settotalConfirmed(response.data.data.summary.total);\n                settotalDeaths(response.data.data.summary.deaths)\n                settotalDischarged(response.data.data.summary.discharged)\n                //setTime(response.data.lastRefreshed);\n            })\n            .catch(() => window.alert(\"Please Check you internet connection!\"))\n    }\n\n\n\n    useEffect(() => {\n        fetchCases()\n    },[dummy]);\n\n    const handleSwitch = (event) => {\n        if(event.currentTarget.id === 'switch1') {\n            setToggle({...toggle, switch1: !toggle.switch1})\n        }\n        else if(event.currentTarget.id === 'switch2') {\n            setToggle({...toggle, switch2:!toggle.switch2})\n        }\n        else if(event.currentTarget.id === 'switch3') {\n            setToggle({...toggle, switch3:!toggle.switch3})\n        }\n    }\n\n    const generateChart = (loc, data, label) => {\n        return({\n            data: {\n                labels:loc,\n                datasets:[\n                    {\n                        label: label,\n                        data: data,\n                        backgroundColor: color,\n                        borderColor: color,\n                        borderWidth: 2,\n                        hoverBorderWidth:2,\n                        hoverBorderColor:'#000'\n\n                    }\n                ],\n            },\n            width: 1152,\n            height: 648,\n            tooltips: {\n                enabled: false,\n              },\n            options: {\n                legend:{\n                    display:true,\n                    position:'right'\n                },\n                scales: {\n                    xAxes: [{display: false}]\n                  },\n                maintainAspectRatio: true,\n                responsive: true\n            }\n        });\n    }\n\n    return (\n        <div className=\"charts\">\n            {\n                spinner ?\n                    (\n                        <div className={classes.loading}>\n                            <CircularProgress />\n                            <Typography variant=\"h6\">Loading your data..</Typography>\n                        </div>\n                    ):(\n                        <>\n                            <Grid item xs={12}>\n                                <Card className={classes.card}>\n                                    <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\n                                        {type==='totalConfirmed'?'Total Confirmed Cases':\n                                            type==='totalDeaths'?'Total Deaths':'Total Recovered'}\n                                    </Typography>\n                                    <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\n                                        <TextField\n                                            type='text'\n                                            select\n                                            value={type}\n                                            variant='standard'\n                                            color='primary'\n                                            margin='normal'\n                                            onChange={(event) => setType(event.target.value)}\n                                        >\n                                            <MenuItem value='totalConfirmed'>Total Confirmed Cases</MenuItem>\n                                            <MenuItem value='totalDeaths'>Total Deaths</MenuItem>\n                                            <MenuItem value='totalRecovered'>Total Recovered</MenuItem>\n                                        </TextField>\n                                    </Typography>\n                                    <div style = {{padding: \"10px\"}}>\n                                        {\n                                            toggle.switch1 ?\n                                                <Bar {...generateChart(location, type==='totalConfirmed'?\n                                                    Confirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/> :\n                                                <Doughnut {...generateChart(location, type==='totalConfirmed'?\n                                                    Confirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/>\n                                        }\n                                        <FormGroup row>\n                                            <FormControlLabel\n                                                control={<Switch onChange={handleSwitch} id=\"switch1\" />}\n                                                label=\"Switch Graph Type\"\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Card>\n                                    <CardContent>\n                                        <Typography\n                                            className={\"MuiTypography--heading\"}\n                                            variant={\"h4\"}\n                                            gutterBottom>Total\n                                        </Typography>\n                                        <Typography\n                                            className={classes.typography}\n                                            variant={\"h5\"}\n                                            gutterBottom>{totalConfirmed}\n                                        </Typography>\n                                        <Divider className={classes.divider} light />\n                                        <Typography\n                                            className={\"MuiTypography--subheading\"}\n                                            variant={\"h4\"}>Discharged\n                                        </Typography>\n                                        <Typography\n                                            className={classes.typography}\n                                            variant={\"h5\"}\n                                            gutterBottom>{totaldischarged}\n                                        </Typography>\n                                        <Divider className={classes.divider} light />\n                                        <Typography\n                                            className={\"MuiTypography--subheading\"}\n                                            variant={\"h4\"}>Deaths\n                                        </Typography>\n                                        <Typography\n                                            className={classes.typography}\n                                            variant={\"h5\"}\n                                            gutterBottom>{totaldeaths}\n                                        </Typography>\n                                        <Divider className={classes.divider} light />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </>\n                    )\n            }\n        </div>\n    );\n}\n\nexport default Graphs;",["83","84"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/hospital/HospitalDetail.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/StaffPanel.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/StaffChat.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/hospital/Hospitals.js",["85","86","87","88","89","90","91","92","93","94","95","96","97"],"import React from \"react\";\nimport {useHistory} from \"react-router\";\nimport {GoogleApiWrapper, Marker, Map} from 'google-maps-react';\nimport {motion} from 'framer-motion';\nimport {\n    Paper,\n    Grid,\n    makeStyles,\n    colors,\n} from \"@material-ui/core\";\nimport {getToken} from \"../authentication/cookies\";\nimport axios from \"axios\";\nimport MaterialTable from \"material-table\";\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport Link from '@material-ui/icons/Link';\nimport LinkOff from '@material-ui/icons/LinkOff';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {useSnackbar} from \"notistack\";\nrequire('dotenv').config();\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n };\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      backgroundColor: theme.palette.background.paper,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    media: {\n        height: 0,\n        paddingTop: '50%', // 16:9\n    },\n    icon: {\n      color: 'rgba(0, 150, 255, 0.54)',\n    },\n    text : {\n      padding : 5,\n      borderWidth:5,\n      borderRadius:10,\n      borderColor : '#64b5f6'\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nconst Hospitals = (props) => {\n     const classes = useStyles();\n     const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n     const [address, setAddress] = React.useState('')\n     const [data, setData] = React.useState({});\n     const [maxBedHospital,setHospital] = React.useState(\"\");\n     const [stores,setStores] = React.useState([])\n     const [tileData, setTileData] = React.useState([]);\n     const [results, setResults] = React.useState([]);\n     const [search, setSearch] = React.useState('');\n     const [error, setError] = React.useState(false);\n     const [render, setRender] = React.useState(false);\n     const history = useHistory();\n\n     const displayMarkers = () => {\n      return stores.map((store, index) => {\n\n          return <Marker key={index} id={index} position={{ lat: store.lat, lng: store.lng}} />\n      })\n    }\n\n    React.useEffect(()=>{\n        // set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\n\n         axios.get(`${process.env.REACT_APP_API_URL}/portal/hospitals/`,\n              !getToken()? {\n                  headers: {\n                      \"Content-Type\": \"application/json\",\n                  }\n              }:{\n                  headers: {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: `Token ${getToken()}`\n                  }\n              }\n\n         ).then(res => {\n                let probs = [];\n                let markers = [];\n\n                res.data.forEach((obj)=>{\n                    probs.push({\n                        name : obj.name,\n                        prob : (obj.available_beds/obj.total_beds)*100\n                    });\n                    markers.push({\n                        slug: obj.slug,\n                        lat : obj.latitude,\n                        lng: obj.longitude\n                  })\n                });\n\n                probs.sort(( a, b)=> {\n                    if ( a.prob < b.prob){\n                        return 1;\n                    }\n                    if ( a.prob > b.prob){\n                        return -1;\n                    }\n                    return 0; // sort according to decreasing frequencies\n                });\n\n                setHospital(probs[0])\n                setStores(markers);\n                setTileData(res.data);\n         })\n    },[] )// eslint-disable-line react-hooks/exhaustive-deps\n\n    const getCenter = () => {\n         let lat = 0, lng = 0;\n         stores.map(store => {\n             lat += store.lat;\n             lng += store.lng\n         })\n         return {\n             lat: lat/stores.length,\n             lng: lng/stores.length\n         }\n    }\n\n    const handleSearch = (event) => {\n         setSearch(event.target.value);\n         axios.get(`${process.env.REACT_APP_API_URL}/portal/hospitals/search/?name=${event.target.value}`, {\n             headers: {\n                 \"Content-Type\": \"application/json\",\n                 Authorization: `Token ${getToken()}`,\n             }\n         })\n             .then(res => setTileData(res.data))\n             .catch(err => setError(true))\n    }\n\n    return (\n            <Grid item container spacing={2} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                <Grid item xs={12} sm={6} container direction=\"column\" alignItems=\"center\" spacing={1}>\n                    <Grid item xs={12}>\n                        <Paper elevation={10} style={{ padding: '1%', width: '100%', height: '50vh%', textAlign: 'center'}}>\n                            <motion.h1\n                                initial={{ scale: 0}}\n                                animate={{\n                                    scale: 1,\n                                    transition: {\n                                        duration: 1,\n                                        ease: [0.43, 0.13, 0.23, 0.96]\n                                    }\n                                }}\n                                style={{ fontSize: '1.5rem', color: colors.blue[300]}}\n                            >\n                                The COVID-19 Bed Allotment System\n                            </motion.h1>\n                            <motion.ul style={{ textAlign: 'left', fontSize: '1rem'}} initial={{ opacity: 0 }}\n                                       animate={{\n                                           opacity: 1,\n                                           transition: {\n                                               duration: 1.5,\n                                               ease: [0.43, 0.13, 0.23, 0.96]\n                                           }\n                                       }}\n                            >\n                                <motion.li>After logging in, you can apply for a bed in any of the hospitals</motion.li>\n                                <motion.li>You can chat with the staff of any hospital</motion.li>\n                                <motion.li>You will be notified once your application is accepted in any hospital via email</motion.li>\n                            </motion.ul>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper elevation={10} style={{ padding: '1%'}}>\n                            <motion.h2 style={{ color: colors.blue[300]}}\n                                       initial={{ opacity: 0, x: '50%' }}\n                                       animate={{\n                                           opacity: 1,\n                                           x: '0%',\n                                           transition: {\n                                               duration: 1.5,\n                                               ease: [0.43, 0.13, 0.23, 0.96]\n                                           }\n                                       }}\n                            >\n                                {address}\n                            </motion.h2>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper elevation={10} style={{ height: '50vh', width: '100%', position: 'relative', overflow: 'hidden'}}>\n                        {stores &&\n                        <Map\n                            google={props.google}\n                            initialCenter={{\n                                lat: 18.5204,\n                                lng: 73.8567\n                            }}\n                            zoom={14}\n                            center={getCenter()}\n                        >\n                            {displayMarkers()}\n                        </Map>}\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <MaterialTable\n                        style={{\n                            margin: '1%'\n                        }}\n                        columns={[\n                            {title: 'Name of Hospital', field: 'name', align: 'left'},\n                            {title: 'Total Beds', field: 'total_beds', align: 'center'},\n                            {title: 'Available Beds', field: 'available_beds', align: 'center'}\n                        ]}\n                        data={tileData}\n                        options={{\n                            exportButton: true,\n                            showTitle: false,\n                            searchFieldAlignment: 'left',\n                            actionsColumnIndex: -1,\n                            headerStyle: {\n                                color: colors.blue[300],\n                                fontSize: '1.5rem'\n                            },\n                            rowStyle: {\n                                fontSize: '1rem'\n                            }\n                        }}\n                        icons={tableIcons}\n                        actions={[\n                            {\n                                icon: getToken()?Link:LinkOff,\n                                tooltip: 'Book a Bed',\n                                onClick: (event, rowData) => {\n                                    if(!getToken()){\n                                        enqueueSnackbar('You need to login first', {\n                                            variant: 'error',\n                                            key: 'login'\n                                        });\n                                        return closeSnackbar('login')\n                                    }\n                                    return history.push(`/hospital/${rowData.slug}`)\n                                }\n                            }\n                        ]}\n                        title='List of Hospitals'\n                    />\n                </Grid>\n            </Grid>\n    )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `${process.env.REACT_APP_API_KEY}`\n})(Hospitals);","/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/about/About.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/authentication/Logout.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/staff/ViewApplication.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/index.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/authentication/SignUp.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/home/Home.js",["98"],"import React from \"react\";\nimport {Typography} from \"@material-ui/core\";\nimport {getToken} from \"../authentication/cookies\";\nimport jwtDecode from \"jwt-decode\";\nimport Hospitals from \"../hospital/Hospitals\";\nimport StaffPanel from \"../staff/StaffPanel\";\n\nconst Home = () => {\n    let token = getToken();\n    const is_staff = getToken() ==='' ? false : jwtDecode(token).is_staff;\n\n    if(is_staff)\n        return <StaffPanel/>\n\n    return <Hospitals/>\n}\n\nexport default Home;",["99","100"],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/navigation/Navbar.js",[],"/home/chogi/Codes/GitHub/COVID-19_Bed-Allotment-System/frontend/src/components/application/ViewUserApplications.js",["101","102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"108"},{"ruleId":"106","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":40,"nodeType":"112","messageId":"113","endLine":3,"endColumn":49},{"ruleId":"110","severity":1,"message":"114","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":12},{"ruleId":"104","replacedBy":"115"},{"ruleId":"106","replacedBy":"116"},{"ruleId":"110","severity":1,"message":"117","line":89,"column":12,"nodeType":"112","messageId":"113","endLine":89,"endColumn":19},{"ruleId":"110","severity":1,"message":"118","line":91,"column":22,"nodeType":"112","messageId":"113","endLine":91,"endColumn":32},{"ruleId":"110","severity":1,"message":"119","line":92,"column":13,"nodeType":"112","messageId":"113","endLine":92,"endColumn":17},{"ruleId":"110","severity":1,"message":"120","line":92,"column":19,"nodeType":"112","messageId":"113","endLine":92,"endColumn":26},{"ruleId":"110","severity":1,"message":"121","line":93,"column":13,"nodeType":"112","messageId":"113","endLine":93,"endColumn":27},{"ruleId":"110","severity":1,"message":"122","line":96,"column":13,"nodeType":"112","messageId":"113","endLine":96,"endColumn":20},{"ruleId":"110","severity":1,"message":"123","line":96,"column":22,"nodeType":"112","messageId":"113","endLine":96,"endColumn":32},{"ruleId":"110","severity":1,"message":"124","line":97,"column":13,"nodeType":"112","messageId":"113","endLine":97,"endColumn":19},{"ruleId":"110","severity":1,"message":"125","line":98,"column":13,"nodeType":"112","messageId":"113","endLine":98,"endColumn":18},{"ruleId":"110","severity":1,"message":"126","line":99,"column":13,"nodeType":"112","messageId":"113","endLine":99,"endColumn":19},{"ruleId":"110","severity":1,"message":"127","line":99,"column":21,"nodeType":"112","messageId":"113","endLine":99,"endColumn":30},{"ruleId":"128","severity":1,"message":"129","line":158,"column":27,"nodeType":"130","messageId":"131","endLine":158,"endColumn":29},{"ruleId":"110","severity":1,"message":"132","line":168,"column":11,"nodeType":"112","messageId":"113","endLine":168,"endColumn":23},{"ruleId":"110","severity":1,"message":"133","line":2,"column":9,"nodeType":"112","messageId":"113","endLine":2,"endColumn":19},{"ruleId":"104","replacedBy":"134"},{"ruleId":"106","replacedBy":"135"},{"ruleId":"110","severity":1,"message":"136","line":23,"column":17,"nodeType":"112","messageId":"113","endLine":23,"endColumn":23},{"ruleId":"110","severity":1,"message":"137","line":49,"column":12,"nodeType":"112","messageId":"113","endLine":49,"endColumn":16},{"ruleId":"110","severity":1,"message":"138","line":49,"column":18,"nodeType":"112","messageId":"113","endLine":49,"endColumn":25},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Fade' is defined but never used.",["139"],["140"],"'classes' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'maxBedHospital' is assigned a value but never used.","'results' is assigned a value but never used.","'setResults' is assigned a value but never used.","'search' is assigned a value but never used.","'error' is assigned a value but never used.","'render' is assigned a value but never used.","'setRender' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleSearch' is assigned a value but never used.","'Typography' is defined but never used.",["139"],["140"],"'Update' is defined but never used.","'view' is assigned a value but never used.","'setView' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]