[{"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js":"2","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\hospital\\Hospitals.js":"3","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js":"4","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js":"5","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\News.js":"6","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js":"7","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Logout.js":"8","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\sentiments\\Sentiment.js":"9","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js":"10","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js":"11","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\reviews.js":"12","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\Chat.js":"13","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js":"14","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js":"15","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js":"16","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js":"17","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js":"18","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\ChatScreen.js":"19"},{"size":375,"mtime":1619934055275,"results":"20","hashOfConfig":"21"},{"size":11923,"mtime":1619934055250,"results":"22","hashOfConfig":"21"},{"size":8673,"mtime":1620552863456,"results":"23","hashOfConfig":"24"},{"size":782,"mtime":1620554395665,"results":"25","hashOfConfig":"21"},{"size":1112,"mtime":1619934055235,"results":"26","hashOfConfig":"21"},{"size":3256,"mtime":1620365014996,"results":"27","hashOfConfig":"24"},{"size":13459,"mtime":1620554296226,"results":"28","hashOfConfig":"21"},{"size":2172,"mtime":1619934055243,"results":"29","hashOfConfig":"21"},{"size":1120,"mtime":1619934055267,"results":"30","hashOfConfig":"21"},{"size":828,"mtime":1619934055248,"results":"31","hashOfConfig":"21"},{"size":14517,"mtime":1620554344857,"results":"32","hashOfConfig":"21"},{"size":2378,"mtime":1620413639014,"results":"33","hashOfConfig":"21"},{"size":5540,"mtime":1620416592149,"results":"34","hashOfConfig":"21"},{"size":816,"mtime":1620366572155,"results":"35","hashOfConfig":"21"},{"size":465,"mtime":1619934055269,"results":"36","hashOfConfig":"21"},{"size":10550,"mtime":1620475557163,"results":"37","hashOfConfig":"21"},{"size":7213,"mtime":1620554374059,"results":"38","hashOfConfig":"21"},{"size":5751,"mtime":1620554355511,"results":"39","hashOfConfig":"21"},{"size":2935,"mtime":1620554427226,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1uzpb5p",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1caqv7n",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js",[],["86","87"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js",["88"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Typography, CircularProgress, Container, FormGroup, FormControlLabel, Switch, Card,CardContent } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport News from \"../home/News\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nconst color = ['rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\r\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\r\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)',\r\n'rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)',]\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    card: {\r\n        overflowX: \"auto\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    typography: {\r\n        fontFamily: 'Raleway, Arial',\r\n        fontSize: 32,\r\n        color : '#039BE5'\r\n    },\r\n    loading : {\r\n        margin: 'auto',\r\n        width: '50%',\r\n        textAlign:'center',\r\n        paddingTop: '15%'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        height: '40%',\r\n    },\r\n    divider: {\r\n        margin: `${theme.spacing.unit * 3}px 0`\r\n    }\r\n}))\r\n\r\nconst Graphs = () => {\r\n    const dummy = null;\r\n    const classes = useStyles();\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [toggle,setToggle] = useState({\r\n        switch1: true,\r\n        switch2: true,\r\n        switch3: true,\r\n    });\r\n    const [location, setLocation] = useState([]);\r\n    const [Confirmed, setConfirmed] = useState([]);\r\n    const [deaths, setDeaths] = useState([]);\r\n    const [discharged, setDischarged] = useState([]);\r\n    const [totalConfirmed, settotalConfirmed] = useState([]);\r\n    const [totaldeaths, settotalDeaths] = useState([]);\r\n    const [totaldischarged, settotalDischarged] = useState([]);\r\n    const [time, setTime] = useState({});\r\n    const [type, setType] = useState('totalConfirmed');\r\n    const [news,setNews] = useState([]);\r\n\r\n    const fetchCases = () => {\r\n        axios({\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            url: 'https://api.rootnet.in/covid19-in/stats/latest'\r\n        })\r\n            .then(response => {\r\n                setTimeout(() => setSpinner(false), 1000);\r\n                const labels = response.data.data.regional;\r\n                setLocation(labels.map(label => label.loc));\r\n                setConfirmed(labels.map(label => label.totalConfirmed));\r\n                setDeaths(labels.map(label => label.deaths));\r\n                setDischarged(labels.map(label => label.discharged));\r\n                settotalConfirmed(response.data.data.summary.total);\r\n                settotalDeaths(response.data.data.summary.deaths)\r\n                settotalDischarged(response.data.data.summary.discharged)\r\n                setTime(response.data.lastRefreshed);\r\n            })\r\n            .catch(() => window.alert(\"Please Check you internet connection!\"))\r\n    }\r\n\r\n    const fetchNews = () => {\r\n        axios({\r\n            method:'get',\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            url: 'https://newsapi.org/v2/everything?q=covid&apiKey=13cb9c6ff1be40f8bb5ee37eef23c446'\r\n            })\r\n            .then(data => {\r\n                setTimeout(() => setSpinner(false), 1000);\r\n                setNews(data.data.articles);\r\n            })\r\n            .catch((e) => window.alert(e.message))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCases()\r\n        fetchNews()\r\n    },[dummy]);\r\n\r\n    const handleSwitch = (event) => {\r\n        if(event.currentTarget.id === 'switch1') {\r\n            setToggle({...toggle, switch1: !toggle.switch1})\r\n        }\r\n        else if(event.currentTarget.id === 'switch2') {\r\n            setToggle({...toggle, switch2:!toggle.switch2})\r\n        }\r\n        else if(event.currentTarget.id === 'switch3') {\r\n            setToggle({...toggle, switch3:!toggle.switch3})\r\n        }\r\n    }\r\n\r\n    const generateChart = (loc, data, label) => {\r\n        return({\r\n            data: {\r\n                labels:loc,\r\n                datasets:[\r\n                    {\r\n                        label: label,\r\n                        data: data,\r\n                        backgroundColor: color,\r\n                        borderColor: color,\r\n                        borderWidth: 2,\r\n                        hoverBorderWidth:2,\r\n                        hoverBorderColor:'#000'\r\n\r\n                    }\r\n                ],\r\n            },\r\n            width: 1152,\r\n            height: 648,\r\n            tooltips: {\r\n                enabled: false,\r\n              },\r\n            options: {\r\n                legend:{\r\n                    display:true,\r\n                    position:'right'\r\n                },\r\n                scales: {\r\n                    xAxes: [{display: false}]\r\n                  },\r\n                maintainAspectRatio: true,\r\n                responsive: true\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"charts\">\r\n            {\r\n                spinner ?\r\n                    (\r\n                        <div className={classes.loading}>\r\n                            <CircularProgress />\r\n                            <Typography variant=\"h6\">Loading your data..</Typography>\r\n                        </div>\r\n                    ):(\r\n                        <Container>\r\n                             <Grid container className={classes.root} spacing={3}>\r\n                             <Grid item xs={8} className={classes.root}>\r\n                            <Card className={classes.card}>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\r\n                                    {type==='totalConfirmed'?'Total Confirmed Cases':\r\n                                    type==='totalDeaths'?'Total Deaths':'Total Recovered'}\r\n                                </Typography>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\r\n                                    <TextField\r\n                                        type='text'\r\n                                        select\r\n                                        value={type}\r\n                                        variant='standard'\r\n                                        color='primary'\r\n                                        margin='normal'\r\n                                        onChange={(event) => setType(event.target.value)}\r\n                                    >\r\n                                        <MenuItem value='totalConfirmed'>Total Confirmed Cases</MenuItem>\r\n                                        <MenuItem value='totalDeaths'>Total Deaths</MenuItem>\r\n                                        <MenuItem value='totalRecovered'>Total Recovered</MenuItem>\r\n                                    </TextField>\r\n                                </Typography>\r\n                                <div style = {{padding: \"10px\"}}>\r\n                                    {\r\n                                    toggle.switch1 ?\r\n                                        <Bar {...generateChart(location, type==='totalConfirmed'?\r\n                                            Confirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/> :\r\n                                        <Doughnut {...generateChart(location, type==='totalConfirmed'?\r\n                                            Confirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/>\r\n                                    }\r\n                                    <FormGroup row>\r\n                                        <FormControlLabel\r\n                                            control={<Switch onChange={handleSwitch} id=\"switch1\" />}\r\n                                            label=\"Switch Graph Type\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </Card>\r\n                             </Grid>\r\n                             <Fade in={true} timeout={1000}>\r\n                                <Grid item xs={4}>\r\n                                    <Card>\r\n                                    <CardContent>\r\n                                        <Typography\r\n                                            className={\"MuiTypography--heading\"}\r\n                                            variant={\"h4\"}\r\n                                            gutterBottom>Total\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            className={classes.typography}\r\n                                            variant={\"h5\"}\r\n                                            gutterBottom>{totalConfirmed}\r\n                                        </Typography>\r\n                                        <Divider className={classes.divider} light />\r\n                                        <Typography\r\n                                            className={\"MuiTypography--subheading\"}\r\n                                            variant={\"h4\"}>Discharged\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            className={classes.typography}\r\n                                            variant={\"h5\"}\r\n                                            gutterBottom>{totaldischarged}\r\n                                        </Typography>\r\n                                        <Divider className={classes.divider} light />\r\n                                        <Typography\r\n                                            className={\"MuiTypography--subheading\"}\r\n                                            variant={\"h4\"}>Deaths\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            className={classes.typography}\r\n                                            variant={\"h5\"}\r\n                                            gutterBottom>{totaldeaths}\r\n                                        </Typography>\r\n                                        <Divider className={classes.divider} light />\r\n                                    </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                             </Fade>\r\n                             <Fade in={true} timeout={1000}>\r\n                                <Grid item xs={12}><News news = {news}/></Grid>\r\n                             </Fade>\r\n                             </Grid> \r\n                        </Container>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Graphs;",["89","90"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\hospital\\Hospitals.js",["91"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js",[],["92","93"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\News.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Logout.js",[],["94","95"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\sentiments\\Sentiment.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js",[],["96","97"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\reviews.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\Chat.js",["98","99","100","101","102","103","104"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Button from '@material-ui/core/Button';\r\nimport {reviews} from './reviews';\r\nimport ChatScreen from './ChatScreen';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    chatSection: {\r\n      width: '100%',\r\n      height: '80vh'\r\n    },\r\n    headBG: {\r\n        backgroundColor: '#e0e0e0'\r\n    },\r\n    borderRight500: {\r\n        borderRight: '1px solid #e0e0e0'\r\n    },\r\n    messageArea: {\r\n      height: '70vh',\r\n      overflowY: 'auto'\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n        borderRadius : 20,\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: `url(${Image})`,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n      },\r\n      overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        borderRadius : 20,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.2)',\r\n      },\r\n      content: {\r\n        position: 'relative',\r\n        width : '100%',\r\n        paddingTop: theme.spacing(1),\r\n        marginTop: 100,\r\n        [theme.breakpoints.up('md')]: {\r\n          padding: theme.spacing(6),\r\n          paddingRight: 0,\r\n        },\r\n      }\r\n  }));\r\n\r\nconst Chat = (props) => {\r\n    const [state, setState] = React.useState({message: \"\"});\r\n    const [messages,setMessages] = React.useState([]);\r\n    const classes = useStyles();\r\n    const hospital = props.location.state.hospital;\r\n\r\n    const renderReviews = ()=>{\r\n        return (\r\n            <React.Fragment>\r\n                {reviews.map(review=>(\r\n                    <Paper key={review._id} elevation={2} style={{\r\n                        margin : 10,\r\n                        padding : 10\r\n                    }}>\r\n                        <div style={{display:'flex',justifyContent : 'space-between'}}>\r\n                            <Typography variant=\"h6\">\r\n                                {review.feedback}\r\n                            </Typography>\r\n                            <Rating name=\"read-only\" value={review.overallRating} readOnly />\r\n                        </div>\r\n                        <Divider fullWidth/>\r\n                        <Typography variant=\"h6\" color='textSecondary'>\r\n                            {review.reviewDate}\r\n                        </Typography>\r\n                    </Paper>\r\n                ))}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} style={{ overflow:'hidden',}}>\r\n            <Grid item xs={6}>\r\n                <Paper elevation={3} style={{padding:10}}>\r\n                    <Paper className={classes.container} style={{ backgroundImage: `url(${hospital.img})` }}>\r\n                        {/* Increase the priority of the hero background image */}\r\n                        {<img style={{ display: 'none',marginTop:\"10Px\" }} src={`url(${hospital.img})`} alt='bg'/>}\r\n                        <div className={classes.overlay} />\r\n                        <Grid container>\r\n                            <Grid item md={12}>\r\n                                <div className={classes.content}>\r\n                                    <Typography component=\"h1\" variant=\"h3\" color=\"inherit\">\r\n                                        {hospital.name}\r\n                                    </Typography>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                    <div style={{display:'flex',justifyContent:'space-around'}}>\r\n                        <Chip size='large' label={`${hospital.total_beds} beds `} color='primary'/>\r\n                        <Chip size='large' label={`${hospital.beds_availiable} beds availiable`} color='secondary'/>\r\n                        <Button variant='contained' color='primary'>Book a bed</Button>\r\n                    </div>\r\n                    <div style={{display:'flex',justifyContent:'space-between',paddingTop:10}}>\r\n                        <a href={hospital.website} style={{width:\"50%\"}}>\r\n                            <Button variant='outlined' color='primary'>Visit Us</Button>\r\n                        </a>\r\n                        <Paper elevation={1} style={{width:\"50%\",textAlign:'center'}}>\r\n                            <Typography variant='h4'>{hospital.contact}</Typography>\r\n                        </Paper>\r\n                    </div>\r\n                </Paper>\r\n                <Paper  elevation={3} style={{\r\n                    width : '100%',\r\n                    height : 200,\r\n                    marginTop : 10,\r\n                    overflow : 'auto'\r\n                }}>\r\n                    {renderReviews()}\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                  <ChatScreen id={hospital._id}/>  \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Chat;","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\ChatScreen.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":66,"column":12,"nodeType":"111","messageId":"112","endLine":66,"endColumn":16},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"109","severity":2,"message":"115","line":43,"column":20,"nodeType":"111","messageId":"112","endLine":43,"endColumn":25},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","replacedBy":"117"},{"ruleId":"105","replacedBy":"118"},{"ruleId":"107","replacedBy":"119"},{"ruleId":"105","replacedBy":"120"},{"ruleId":"107","replacedBy":"121"},{"ruleId":"109","severity":1,"message":"122","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":11},{"ruleId":"109","severity":1,"message":"123","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":17},{"ruleId":"109","severity":1,"message":"124","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":12},{"ruleId":"109","severity":1,"message":"125","line":67,"column":12,"nodeType":"111","messageId":"112","endLine":67,"endColumn":17},{"ruleId":"109","severity":1,"message":"126","line":67,"column":19,"nodeType":"111","messageId":"112","endLine":67,"endColumn":27},{"ruleId":"109","severity":1,"message":"127","line":68,"column":12,"nodeType":"111","messageId":"112","endLine":68,"endColumn":20},{"ruleId":"109","severity":1,"message":"128","line":68,"column":21,"nodeType":"111","messageId":"112","endLine":68,"endColumn":32},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'time' is assigned a value but never used.","Identifier","unusedVar",["129"],["130"],"'props' is defined but never used.",["129"],["130"],["129"],["130"],["129"],["130"],"'Box' is defined but never used.","'TextField' is defined but never used.","'List' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]