[{"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js":"1","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\hospital\\Hospitals.js":"2","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js":"3","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js":"4","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js":"5","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\Home.js":"6","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js":"7","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js":"8","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\staff\\StaffPanel.js":"9","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js":"10","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js":"11","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\Chat.js":"12","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\reviews.js":"13","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js":"14","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Logout.js":"15","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js":"16","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\hospital\\HospitalDetail.js":"17","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js":"18","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js":"19","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\staff\\StaffChat.js":"20"},{"size":11804,"mtime":1620848937314,"results":"21","hashOfConfig":"22"},{"size":7143,"mtime":1620815728685,"results":"23","hashOfConfig":"22"},{"size":816,"mtime":1620366572155,"results":"24","hashOfConfig":"22"},{"size":465,"mtime":1619934055269,"results":"25","hashOfConfig":"22"},{"size":828,"mtime":1620720404132,"results":"26","hashOfConfig":"22"},{"size":1479,"mtime":1620841158615,"results":"27","hashOfConfig":"22"},{"size":7348,"mtime":1620800451716,"results":"28","hashOfConfig":"22"},{"size":1112,"mtime":1619934055235,"results":"29","hashOfConfig":"22"},{"size":1412,"mtime":1620717308997,"results":"30","hashOfConfig":"22"},{"size":13459,"mtime":1620554296226,"results":"31","hashOfConfig":"22"},{"size":11112,"mtime":1620642227918,"results":"32","hashOfConfig":"22"},{"size":11702,"mtime":1620797657621,"results":"33","hashOfConfig":"22"},{"size":2378,"mtime":1620413639014,"results":"34","hashOfConfig":"22"},{"size":14517,"mtime":1620554344857,"results":"35","hashOfConfig":"22"},{"size":2172,"mtime":1619934055243,"results":"36","hashOfConfig":"22"},{"size":5751,"mtime":1620554355511,"results":"37","hashOfConfig":"22"},{"size":5749,"mtime":1620835320317,"results":"38","hashOfConfig":"22"},{"size":782,"mtime":1620554395665,"results":"39","hashOfConfig":"22"},{"size":375,"mtime":1619934055275,"results":"40","hashOfConfig":"22"},{"size":10830,"mtime":1620894706199,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"1uzpb5p",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js",["86","87","88"],"import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from \"clsx\";\r\nimport {AccountCircle, ChatBubble, ListAlt, LocalHospital, LockOpen} from \"@material-ui/icons\";\r\nimport {getCookie, getToken} from \"../authentication/cookies\";\r\nimport {Login} from \"../authentication/Login\";\r\nimport {SignUp} from \"../authentication/SignUp\";\r\nimport UserProfile from \"../profile/UserProfile\";\r\nimport {OTP} from \"../authentication/OTP\";\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport {Logout} from \"../authentication/Logout\";\r\nimport {Switch, Route, useHistory, useLocation} from \"react-router\";\r\nimport Home from \"../home/Home\";\r\nimport About from \"../about/About\";\r\nimport Graphs from \"../charts/Graphs\";\r\nimport Hospitals from '../hospital/Hospitals'\r\nimport StaffPanel from '../staff/StaffPanel'\r\nimport {Brightness4, Brightness7} from \"@material-ui/icons\";\r\nimport {ThemeContext} from \"../../context/ThemeContext\";\r\nimport HospitalDetail from \"../hospital/HospitalDetail\";\r\nimport { Container, Tooltip } from '@material-ui/core';\r\nimport StaffChat from '../staff/StaffChat';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst drawerWidth = 80;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    space : {\r\n        marginRight: theme.spacing(3),\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'flex',\r\n        },\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    themer: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function ClippedDrawer() {\r\n    const classes = useStyles();\r\n    const [login, setLogin] = React.useState(false);\r\n    const [signUp, setSignUp] = React.useState(false);\r\n    const [loggedIn, setLoggedIn] = React.useState(false);\r\n    const [logout, setLogout] = React.useState(false);\r\n    const [otp, setOTP] = React.useState(false);\r\n    const [tab, setTab] = React.useState(0);\r\n    const {dark, toggleTheme} = React.useContext(ThemeContext);\r\n    const [openProfile, setOpenProfile] = React.useState(false);\r\n\r\n    const is_staff = getToken() ==='' ? 'true' : 'false';\r\n\r\n    const handleProfileClickOpen = () => {\r\n      setOpenProfile(true);\r\n    };\r\n    const handleProfileClose = () => {\r\n      setOpenProfile(false);\r\n    };\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    \r\n    const menuId = 'primary-search-account-menu';\r\n    useEffect(() => {\r\n        let token = getToken();\r\n        if(token !== '') {\r\n            setLoggedIn(true);\r\n            if(getCookie('verification')==='false')\r\n            {\r\n                setOTP(true);\r\n            }\r\n        }\r\n        const path = location.pathname;\r\n        switch (path) {\r\n            case '/':\r\n                setTab(0);\r\n                break;\r\n            case '/about':\r\n                setTab(1);\r\n                break;\r\n            case '/graphs':\r\n                setTab(2);\r\n                break;\r\n            default:\r\n                setTab(null);\r\n        }\r\n    }, [location, login, signUp, logout])\r\n\r\n    const handleTabChange = (event, newTab) => {\r\n        setTab(newTab);\r\n        switch(newTab) {\r\n            case 0:\r\n                history.push('/');\r\n                break;\r\n            case 1:\r\n                history.push('/about');\r\n                break;\r\n            case 2:\r\n                history.push('/graphs');\r\n                break;\r\n            default:\r\n                history.push('/');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar variant='dense'> \r\n                    <Typography variant=\"h5\" noWrap>\r\n                        COBAS\r\n                    </Typography>\r\n                    <div className={classes.space}/>\r\n                    {!loggedIn ? \r\n                        <Hidden smDown>\r\n                            <Tabs value={tab} indicatorColor=\"primary\" textColor=\"primary\" onChange={handleTabChange}>\r\n                                <Tab label=\"Home\" />\r\n                                <Tab label=\"About Us\" />\r\n                                <Tab label=\"Stats\" />\r\n                            </Tabs>\r\n                        </Hidden> : null}\r\n                        <IconButton edge='end' className={classes.themer} onClick={toggleTheme}>\r\n                            {dark ? <Brightness7/>: <Brightness4/>}\r\n                        </IconButton>\r\n                    <div className={classes.grow} />\r\n                    {loggedIn ? \r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                            <Badge color=\"secondary\">\r\n                                <MailIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                            onClick = {handleProfileClickOpen}\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div> : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                anchor=\"left\"\r\n                open={true}\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n            >\r\n                <Toolbar variant='dense' />\r\n                <div className={classes.drawerContainer}>\r\n                    {!loggedIn?(\r\n                        <List>\r\n                            <ListItem button key={'Login'} onClick={() => setLogin(true)}>\r\n                                <Tooltip title='Login'>\r\n                                    <IconButton fontSize='large'><LockOpen /></IconButton>\r\n                                </Tooltip>\r\n                            </ListItem>\r\n                            <ListItem button key={'SignUp'} onClick={() => setSignUp(true)}>\r\n                                <Tooltip title='Sign Up'>\r\n                                    <IconButton fontSize='large'><AccountCircle /></IconButton>\r\n                                </Tooltip>\r\n                            </ListItem>\r\n                        </List>\r\n                    ): is_staff==='false' ? (\r\n                        <List>\r\n                         <ListItem button key={'Your Applications'}>\r\n                             <Tooltip title='Your Applications'>\r\n                                <IconButton fontSize='large'><ListAlt /></IconButton>\r\n                             </Tooltip>\r\n                        </ListItem>\r\n                         <ListItem button key={'Your Chats'} >\r\n                            <Tooltip title='Your Chats'>\r\n                                <IconButton fontSize='large'><ChatBubble/></IconButton>  \r\n                            </Tooltip>\r\n                        </ListItem>\r\n                         <ListItem button key={'Search Hospitals'}>\r\n                            <Tooltip title='Search Hospitals'>\r\n                                <IconButton fontSize='large'><LocalHospital /></IconButton>\r\n                            </Tooltip> \r\n                        </ListItem>\r\n                        <ListItem button key={'Logout'} onClick={() => setLogout(true)}>\r\n                            <Tooltip title='Logout'>\r\n                                <IconButton fontSize='large'><LockOpen /></IconButton>\r\n                            </Tooltip>\r\n                        </ListItem>\r\n                    </List>\r\n                    ) : (\r\n                    <List>\r\n                        <ListItem button key={'Chats'} >\r\n                            <Tooltip title='Chats'>\r\n                                <IconButton fontSize='large'><ChatBubble/></IconButton>  \r\n                            </Tooltip>\r\n                        </ListItem>\r\n                        <ListItem button key={'Logout'} onClick={() => setLogout(true)}>\r\n                            <Tooltip title='Logout'>\r\n                                <IconButton fontSize='large'><LockOpen /></IconButton>\r\n                            </Tooltip>\r\n                        </ListItem>\r\n                    </List>\r\n                    )}\r\n                    <Divider />\r\n                </div>\r\n            </Drawer>\r\n            <Login open={login} setOpen={setLogin} setOTP={setOTP}/>\r\n            <SignUp open={signUp} setOpen={setSignUp} otp={otp} setOTP={setOTP}/>\r\n            <OTP open={otp} setOpen={setOTP} setLoggedIn={setLoggedIn}/>\r\n            <Logout open={logout} setOpen={setLogout} setLoggedIn={setLoggedIn}/>\r\n            <UserProfile open={openProfile} handleClose = {handleProfileClose}/>\r\n            <Container>\r\n                <main\r\n                    className={clsx(classes.content, {\r\n                        [classes.contentShift]: true,\r\n                    })}\r\n                >\r\n                    <Toolbar variant='dense'/>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home}/>\r\n                        <Route exact path='/about' component={About}/>\r\n                        <Route exact path='/graphs' component={Graphs}/>\r\n                        <Route path='/hospital/:slug' component={HospitalDetail}/>\r\n                        <Route exact path='/staff' component={StaffPanel}/>\r\n                        <Route exact path='/staffchat' component={StaffChat}/>\r\n                        <Route exact path='/hospitals' component={Hospitals}/>\r\n                    </Switch>\r\n                </main>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\hospital\\Hospitals.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js",[],["89","90"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\Home.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\staff\\StaffPanel.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js",[],["91","92"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js",[],["93","94"],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\Chat.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\chat\\reviews.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Logout.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\hospital\\HospitalDetail.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\staff\\StaffChat.js",["95","96","97","98","99","100"],{"ruleId":"101","severity":1,"message":"102","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":20},{"ruleId":"101","severity":1,"message":"105","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":20},{"ruleId":"101","severity":1,"message":"106","line":38,"column":8,"nodeType":"103","messageId":"104","endLine":38,"endColumn":17},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"101","severity":1,"message":"115","line":2,"column":21,"nodeType":"103","messageId":"104","endLine":2,"endColumn":28},{"ruleId":"101","severity":1,"message":"116","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":18},{"ruleId":"101","severity":1,"message":"106","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":17},{"ruleId":"101","severity":1,"message":"117","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":13},{"ruleId":"101","severity":1,"message":"118","line":9,"column":10,"nodeType":"103","messageId":"104","endLine":9,"endColumn":22},{"ruleId":"101","severity":1,"message":"119","line":32,"column":9,"nodeType":"103","messageId":"104","endLine":32,"endColumn":14},"no-unused-vars","'ListItemIcon' is defined but never used.","Identifier","unusedVar","'ListItemText' is defined but never used.","'jwtDecode' is defined but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],["120"],["121"],["120"],["121"],"'Divider' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'mergeClasses' is defined but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]