[{"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js":"1","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\News.js":"2","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js":"3","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js":"4","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js":"5","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js":"6","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js":"7","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js":"8","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js":"9","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js":"10","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js":"11","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js":"12"},{"size":760,"mtime":1609417971168,"results":"13","hashOfConfig":"14"},{"size":1520,"mtime":1609608792623,"results":"15","hashOfConfig":"14"},{"size":816,"mtime":1609417863441,"results":"16","hashOfConfig":"14"},{"size":465,"mtime":1609417825301,"results":"17","hashOfConfig":"14"},{"size":9690,"mtime":1609420898583,"results":"18","hashOfConfig":"14"},{"size":828,"mtime":1608996192156,"results":"19","hashOfConfig":"14"},{"size":7242,"mtime":1609059494053,"results":"20","hashOfConfig":"14"},{"size":5771,"mtime":1609059494058,"results":"21","hashOfConfig":"14"},{"size":14495,"mtime":1609406826792,"results":"22","hashOfConfig":"14"},{"size":13384,"mtime":1609420156466,"results":"23","hashOfConfig":"14"},{"size":1112,"mtime":1609059494051,"results":"24","hashOfConfig":"14"},{"size":8844,"mtime":1609608614310,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1x90zrf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js",["52"],"import React from \"react\";\r\nimport {ThemeProvider, createMuiTheme, colors, CssBaseline} from \"@material-ui/core\";\r\nimport Navbar from \"./components/navigation/Navbar\";\r\nimport {blue, red} from \"@material-ui/core/colors\";\r\nimport {ThemeContext} from \"./context/ThemeContext\";\r\n\r\nconst App = () => {\r\n  const {dark} = React.useContext(ThemeContext);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: dark ? 'dark' : 'light',\r\n      primary: {\r\n        main: dark?blue[300]:blue[800],\r\n      },\r\n      secondary: {\r\n        main: dark?red[300]:red[800],\r\n      },\r\n    },\r\n  })\r\n\r\n  return (\r\n     <>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline/>\r\n        <Navbar/>\r\n      </ThemeProvider>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n",["53","54"],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\News.js",["55","56","57","58","59","60","61","62"],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\about\\About.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js",["63","64"],{"ruleId":"65","severity":1,"message":"66","line":2,"column":40,"nodeType":"67","messageId":"68","endLine":2,"endColumn":46},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"65","severity":1,"message":"73","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"74","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"75","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"65","severity":1,"message":"76","line":3,"column":22,"nodeType":"67","messageId":"68","endLine":3,"endColumn":38},{"ruleId":"65","severity":1,"message":"77","line":3,"column":51,"nodeType":"67","messageId":"68","endLine":3,"endColumn":60},{"ruleId":"65","severity":1,"message":"78","line":3,"column":62,"nodeType":"67","messageId":"68","endLine":3,"endColumn":78},{"ruleId":"65","severity":1,"message":"79","line":3,"column":80,"nodeType":"67","messageId":"68","endLine":3,"endColumn":86},{"ruleId":"65","severity":1,"message":"80","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":26,"column":9,"nodeType":"83","messageId":"84","endLine":26,"endColumn":21},{"ruleId":"65","severity":1,"message":"85","line":53,"column":12,"nodeType":"67","messageId":"68","endLine":53,"endColumn":16},"no-unused-vars","'colors' is defined but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'CircularProgress' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Paper' is defined but never used.","no-dupe-keys","Duplicate key 'marginBottom'.","ObjectExpression","unexpected","'time' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\index.js":"1","D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\profile\\UserProfile.js":"2","D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\authentication\\SignUp.js":"3","D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\charts\\Graphs.js":"4","D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\about\\About.js":"5","D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\authentication\\Logout.js":"6"},{"size":816,"mtime":1609507393558,"results":"7","hashOfConfig":"8"},{"size":13384,"mtime":1609507393557,"results":"9","hashOfConfig":"8"},{"size":14495,"mtime":1609324294657,"results":"10","hashOfConfig":"8"},{"size":8155,"mtime":1609507758390,"results":"11","hashOfConfig":"8"},{"size":1112,"mtime":1609007301305,"results":"12","hashOfConfig":"8"},{"size":2172,"mtime":1609006679731,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"cgwgh3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\index.js",[],["28","29"],"D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\profile\\UserProfile.js",[],"D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\authentication\\SignUp.js",[],"D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\charts\\Graphs.js",["30"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Typography, CircularProgress, Container, FormGroup, FormControlLabel, Switch, Card } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport News from \"../home/News\";\r\n\r\nconst color = ['rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\r\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\r\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)',\r\n'rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)',]\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        overflowX: \"auto\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    loading : {\r\n        margin: 'auto',\r\n        width: '50%',\r\n        textAlign:'center',\r\n        paddingTop: '15%'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        height: '40%',\r\n    }  \r\n})\r\n\r\nconst Graphs = () => {\r\n    const dummy = null;\r\n    const classes = useStyles();\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [toggle,setToggle] = useState({\r\n        switch1: true,\r\n        switch2: true,\r\n        switch3: true,\r\n    });\r\n    const [location, setLocation] = useState([]);\r\n    const [totalConfirmed, setTotalConfirmed] = useState([]);\r\n    const [deaths, setDeaths] = useState([]);\r\n    const [discharged, setDischarged] = useState([]);\r\n    const [time, setTime] = useState({});\r\n    const [type, setType] = useState('totalConfirmed');\r\n\r\n    const fetchCases = () => {\r\n        axios({\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            url: 'https://api.rootnet.in/covid19-in/stats/latest'\r\n        })\r\n            .then(response => {\r\n                setTimeout(() => setSpinner(false), 1000);\r\n                const labels = response.data.data.regional;\r\n                setLocation(labels.map(label => label.loc));\r\n                setTotalConfirmed(labels.map(label => label.totalConfirmed));\r\n                setDeaths(labels.map(label => label.deaths));\r\n                setDischarged(labels.map(label => label.discharged));\r\n                setTime(response.data.lastRefreshed);\r\n            })\r\n            .catch(() => window.alert(\"Please Check you internet connection!\"))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCases()\r\n    },[dummy]);\r\n\r\n    const handleSwitch = (event) => {\r\n        if(event.currentTarget.id === 'switch1') {\r\n            setToggle({...toggle, switch1: !toggle.switch1})\r\n        }\r\n        else if(event.currentTarget.id === 'switch2') {\r\n            setToggle({...toggle, switch2:!toggle.switch2})\r\n        }\r\n        else if(event.currentTarget.id === 'switch3') {\r\n            setToggle({...toggle, switch3:!toggle.switch3})\r\n        }\r\n    }\r\n\r\n    const generateChart = (loc, data, label) => {\r\n        return({\r\n            data: {\r\n                labels:loc,\r\n                datasets:[\r\n                    {\r\n                        label: label,\r\n                        data: data,\r\n                        backgroundColor: color,\r\n                        borderColor: color,\r\n                        borderWidth: 2,\r\n                        hoverBorderWidth:2,\r\n                        hoverBorderColor:'#000'\r\n\r\n                    }\r\n                ],\r\n            },\r\n            width: 1152,\r\n            height: 648,\r\n            tooltips: {\r\n                enabled: false,\r\n              },\r\n            options: {\r\n                legend:{\r\n                    display:true,\r\n                    position:'right'\r\n                },\r\n                scales: {\r\n                    xAxes: [{display: false}]\r\n                  },\r\n                maintainAspectRatio: true,\r\n                responsive: true\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"charts\">\r\n            {\r\n                spinner ?\r\n                    (\r\n                        <div className={classes.loading}>\r\n                            <CircularProgress />\r\n                            <Typography variant=\"h6\">Loading your data..</Typography>\r\n                        </div>\r\n                    ):(\r\n                        <Container>\r\n                             <Grid container className={classes.root} spacing={3}>\r\n                             <Grid item xs={8}>\r\n                            <Card className={classes.card}>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\r\n                                    {type==='totalConfirmed'?'Total Confirmed Cases':\r\n                                    type==='totalDeaths'?'Total Deaths':'Total Recovered'}\r\n                                </Typography>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\r\n                                    <TextField\r\n                                        type='text'\r\n                                        select\r\n                                        value={type}\r\n                                        variant='standard'\r\n                                        color='primary'\r\n                                        margin='normal'\r\n                                        onChange={(event) => setType(event.target.value)}\r\n                                    >\r\n                                        <MenuItem value='totalConfirmed'>Total Confirmed Cases</MenuItem>\r\n                                        <MenuItem value='totalDeaths'>Total Deaths</MenuItem>\r\n                                        <MenuItem value='totalRecovered'>Total Recovered</MenuItem>\r\n                                    </TextField>\r\n                                </Typography>\r\n                                <div style = {{padding: \"10px\"}}>\r\n                                    {\r\n                                        toggle.switch1 ?\r\n                                            <Bar {...generateChart(location, type==='totalConfirmed'?\r\n                                                totalConfirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/> :\r\n                                            <Doughnut {...generateChart(location, type==='totalConfirmed'?\r\n                                                totalConfirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/>\r\n                                    }\r\n                                    <FormGroup row>\r\n                                        <FormControlLabel\r\n                                            control={<Switch onChange={handleSwitch} id=\"switch1\" />}\r\n                                            label=\"Switch Graph Type\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </Card>\r\n                             </Grid>\r\n                             <Grid item xs={4}><News/></Grid>\r\n                             </Grid>\r\n                            \r\n                        </Container>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Graphs;","D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\about\\About.js",[],"D:\\codes\\Github\\BedAllotmentSystem\\frontend\\src\\components\\authentication\\Logout.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":52,"column":12,"nodeType":"37","messageId":"38","endLine":52,"endColumn":16},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'time' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]
>>>>>>> c160441b580e3a977fbfc0c81837e7c378f6152f
