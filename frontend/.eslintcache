[{"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js":"2","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js":"3","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js":"4","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js":"5","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js":"6","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Logout.js":"7","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js":"8","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js":"9","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js":"10","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\News.js":"11","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js":"12","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js":"13"},{"size":375,"mtime":1607537674205,"results":"14","hashOfConfig":"15"},{"size":13384,"mtime":1609420156466,"results":"16","hashOfConfig":"15"},{"size":816,"mtime":1609417863441,"results":"17","hashOfConfig":"15"},{"size":9690,"mtime":1609420898583,"results":"18","hashOfConfig":"15"},{"size":828,"mtime":1608996192156,"results":"19","hashOfConfig":"15"},{"size":7242,"mtime":1609059494053,"results":"20","hashOfConfig":"15"},{"size":2172,"mtime":1609059494056,"results":"21","hashOfConfig":"15"},{"size":14495,"mtime":1609406826792,"results":"22","hashOfConfig":"15"},{"size":8157,"mtime":1609420208953,"results":"23","hashOfConfig":"15"},{"size":760,"mtime":1609417971168,"results":"24","hashOfConfig":"15"},{"size":2797,"mtime":1609420620969,"results":"25","hashOfConfig":"15"},{"size":465,"mtime":1609417825301,"results":"26","hashOfConfig":"15"},{"size":5771,"mtime":1609059494058,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x90zrf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\profile\\UserProfile.js",[],["56","57"],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\index.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\navigation\\Navbar.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\cookies.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Login.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\Logout.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\SignUp.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\charts\\Graphs.js",["58"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Typography, CircularProgress, Container, FormGroup, FormControlLabel, Switch, Card } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport News from \"../home/News\";\r\n\r\nconst color = ['rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\r\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)',\r\n'rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)',\r\n'rgba(75, 192, 192, 0.8)','rgba(153, 102, 255, 0.8)','rgba(255, 159, 64, 0.8)','rgba(255, 99, 132, 0.8)',\r\n'rgba(54, 162, 235, 0.8)','rgba(255, 206, 86, 0.8)','rgba(255, 99, 132, 0.8)','rgba(54, 162, 235, 0.8)',\r\n'rgba(255, 206, 86, 0.8)','rgba(75, 192, 192, 0.8)',]\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        overflowX: \"auto\",\r\n        marginBottom: \"20px\"   \r\n    },\r\n    loading : {\r\n        margin: 'auto',\r\n        width: '50%',\r\n        textAlign:'center',\r\n        paddingTop: '15%'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        height: '40%',\r\n    }  \r\n})\r\n\r\nconst Graphs = () => {\r\n    const dummy = null;\r\n    const classes = useStyles();\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [toggle,setToggle] = useState({\r\n        switch1: true,\r\n        switch2: true,\r\n        switch3: true,\r\n    });\r\n    const [location, setLocation] = useState([]);\r\n    const [totalConfirmed, setTotalConfirmed] = useState([]);\r\n    const [deaths, setDeaths] = useState([]);\r\n    const [discharged, setDischarged] = useState([]);\r\n    const [time, setTime] = useState({});\r\n    const [type, setType] = useState('totalConfirmed');\r\n\r\n    const fetchCases = () => {\r\n        axios({\r\n            method:'get',\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            url: 'https://api.rootnet.in/covid19-in/stats/latest'\r\n        })\r\n            .then(response => {\r\n                setTimeout(() => setSpinner(false), 1000);\r\n                const labels = response.data.data.regional;\r\n                setLocation(labels.map(label => label.loc));\r\n                setTotalConfirmed(labels.map(label => label.totalConfirmed));\r\n                setDeaths(labels.map(label => label.deaths));\r\n                setDischarged(labels.map(label => label.discharged));\r\n                setTime(response.data.lastRefreshed);\r\n            })\r\n            .catch(() => window.alert(\"Please Check you internet connection!\"))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCases()\r\n    },[dummy]);\r\n\r\n    const handleSwitch = (event) => {\r\n        if(event.currentTarget.id === 'switch1') {\r\n            setToggle({...toggle, switch1: !toggle.switch1})\r\n        }\r\n        else if(event.currentTarget.id === 'switch2') {\r\n            setToggle({...toggle, switch2:!toggle.switch2})\r\n        }\r\n        else if(event.currentTarget.id === 'switch3') {\r\n            setToggle({...toggle, switch3:!toggle.switch3})\r\n        }\r\n    }\r\n\r\n    const generateChart = (loc, data, label) => {\r\n        return({\r\n            data: {\r\n                labels:loc,\r\n                datasets:[\r\n                    {\r\n                        label: label,\r\n                        data: data,\r\n                        backgroundColor: color,\r\n                        borderColor: color,\r\n                        borderWidth: 2,\r\n                        hoverBorderWidth:2,\r\n                        hoverBorderColor:'#000'\r\n\r\n                    }\r\n                ],\r\n            },\r\n            width: 1152,\r\n            height: 648,\r\n            tooltips: {\r\n                enabled: false,\r\n              },\r\n            options: {\r\n                legend:{\r\n                    display:true,\r\n                    position:'right'\r\n                },\r\n                scales: {\r\n                    xAxes: [{display: false}]\r\n                  },\r\n                maintainAspectRatio: true,\r\n                responsive: true\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"charts\">\r\n            {\r\n                spinner ?\r\n                    (\r\n                        <div className={classes.loading}>\r\n                            <CircularProgress />\r\n                            <Typography variant=\"h6\">Loading your data..</Typography>\r\n                        </div>\r\n                    ):(\r\n                        <Container>\r\n                             <Grid container className={classes.root} spacing={3}>\r\n                             <Grid item xs={8}>\r\n                            <Card className={classes.card}>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\r\n                                    {type==='totalConfirmed'?'Total Confirmed Cases':\r\n                                    type==='totalDeaths'?'Total Deaths':'Total Recovered'}\r\n                                </Typography>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{fontWeight:'lighter', paddingTop: '20px'}}>\r\n                                    <TextField\r\n                                        type='text'\r\n                                        select\r\n                                        value={type}\r\n                                        variant='standard'\r\n                                        color='primary'\r\n                                        margin='normal'\r\n                                        onChange={(event) => setType(event.target.value)}\r\n                                    >\r\n                                        <MenuItem value='totalConfirmed'>Total Confirmed Cases</MenuItem>\r\n                                        <MenuItem value='totalDeaths'>Total Deaths</MenuItem>\r\n                                        <MenuItem value='totalRecovered'>Total Recovered</MenuItem>\r\n                                    </TextField>\r\n                                </Typography>\r\n                                <div style = {{padding: \"10px\"}}>\r\n                                    {\r\n                                        toggle.switch1 ?\r\n                                            <Bar {...generateChart(location, type==='totalConfirmed'?\r\n                                                totalConfirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/> :\r\n                                            <Doughnut {...generateChart(location, type==='totalConfirmed'?\r\n                                                totalConfirmed:type==='totalDeaths'?deaths:discharged, type.slice(5, type.length))}/>\r\n                                    }\r\n                                    <FormGroup row>\r\n                                        <FormControlLabel\r\n                                            control={<Switch onChange={handleSwitch} id=\"switch1\" />}\r\n                                            label=\"Switch Graph Type\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </Card>\r\n                             </Grid>\r\n                             <Grid item xs={4}><News/></Grid>\r\n                             </Grid>\r\n                            \r\n                        </Container>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Graphs;","C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\App.js",["59"],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\home\\News.js",["60","61","62","63"],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\context\\ThemeContext.js",[],"C:\\Users\\me\\Desktop\\COVID-19_Bed-Allotment-System\\frontend\\src\\components\\authentication\\OTP.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":52,"column":12,"nodeType":"70","messageId":"71","endLine":52,"endColumn":16},{"ruleId":"68","severity":1,"message":"72","line":2,"column":40,"nodeType":"70","messageId":"71","endLine":2,"endColumn":46},{"ruleId":"68","severity":1,"message":"73","line":3,"column":51,"nodeType":"70","messageId":"71","endLine":3,"endColumn":60},{"ruleId":"68","severity":1,"message":"74","line":3,"column":62,"nodeType":"70","messageId":"71","endLine":3,"endColumn":78},{"ruleId":"68","severity":1,"message":"75","line":3,"column":80,"nodeType":"70","messageId":"71","endLine":3,"endColumn":86},{"ruleId":"68","severity":1,"message":"76","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":13},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'time' is assigned a value but never used.","Identifier","unusedVar","'colors' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation"]